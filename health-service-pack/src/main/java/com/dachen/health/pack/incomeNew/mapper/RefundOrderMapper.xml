<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dachen.health.pack.incomeNew.mapper.RefundOrderMapper" >
  <resultMap id="BaseResultMap" type="com.dachen.health.pack.incomeNew.entity.po.RefundOrder" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="thrid_refund_id" property="thrid_refund_id" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="creater_date" property="createrDate" jdbcType="BIGINT" />
    <result column="last_update_user_id" property="lastUpdateUserId" jdbcType="INTEGER" />
    <result column="last_update_date" property="lastUpdateDate" jdbcType="BIGINT" />
  </resultMap>
  
  <resultMap type="com.dachen.health.pack.incomeNew.entity.po.WXMapVO" id="wxMap">
  	 <id column="ID" property="id" jdbcType="INTEGER" />
     <result column="thrid_refund_id" property="thrid_refund_id" jdbcType="VARCHAR" />
     <result column="tId" property="tid" jdbcType="INTEGER"/>
     <result column="money" property="money" jdbcType="DOUBLE"/>
      <result column="order_id" property="orderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    ID, user_id, order_id, type, status, money, operator, create_user_id, creater_date, thrid_refund_id,
    last_update_user_id, last_update_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dachen.health.pack.incomeNew.entity.po.RefundOrderExample" >
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_refund_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from p_refund_order
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from p_refund_order
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dachen.health.pack.incomeNew.entity.po.RefundOrderExample" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from p_refund_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dachen.health.pack.incomeNew.entity.po.RefundOrder" >
    <!--
      WARNING - @mbggenerated
    -->
    insert into p_refund_order (ID, user_id, order_id, 
      type, status, money, thrid_refund_id,
      operator, create_user_id, creater_date, 
      last_update_user_id, last_update_date)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{money,jdbcType=DOUBLE}, #{thrid_refund_id,jdbcType=VARCHAR}, 
      #{operator,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER}, #{createrDate,jdbcType=BIGINT}, 
      #{lastUpdateUserId,jdbcType=INTEGER}, #{lastUpdateDate,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.dachen.health.pack.incomeNew.entity.po.RefundOrder" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
    -->
    insert into p_refund_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="money != null" >
        money,
      </if>
       <if test="thrid_refund_id != null" >
        thrid_refund_id,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createrDate != null" >
        creater_date,
      </if>
      <if test="lastUpdateUserId != null" >
        last_update_user_id,
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
       <if test="thrid_refund_id != null" >
         #{thrid_refund_id,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createrDate != null" >
        #{createrDate,jdbcType=BIGINT},
      </if>
      <if test="lastUpdateUserId != null" >
        #{lastUpdateUserId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateDate != null" >
        #{lastUpdateDate,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dachen.health.pack.incomeNew.entity.po.RefundOrderExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from p_refund_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update p_refund_order
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
       <if test="record.thrid_refund_id != null" >
         #{record.thrid_refund_id,jdbcType=VARCHAR}
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createrDate != null" >
        creater_date = #{record.createrDate,jdbcType=BIGINT},
      </if>
      <if test="record.lastUpdateUserId != null" >
        last_update_user_id = #{record.lastUpdateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateDate != null" >
        last_update_date = #{record.lastUpdateDate,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update p_refund_order
    set ID = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DOUBLE},
      operator = #{record.operator,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      creater_date = #{record.createrDate,jdbcType=BIGINT},
      last_update_user_id = #{record.lastUpdateUserId,jdbcType=INTEGER},
      last_update_date = #{record.lastUpdateDate,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dachen.health.pack.incomeNew.entity.po.RefundOrder" >
    <!--
      WARNING - @mbggenerated
    -->
    update p_refund_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createrDate != null" >
        creater_date = #{createrDate,jdbcType=BIGINT},
      </if>
      <if test="lastUpdateUserId != null" >
        last_update_user_id = #{lastUpdateUserId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date = #{lastUpdateDate,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dachen.health.pack.incomeNew.entity.po.RefundOrder" >
    <!--
      WARNING - @mbggenerated
    -->
    update p_refund_order
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      operator = #{operator,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      creater_date = #{createrDate,jdbcType=BIGINT},
      last_update_user_id = #{lastUpdateUserId,jdbcType=INTEGER},
      last_update_date = #{lastUpdateDate,jdbcType=BIGINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectWXPayTOQuery" parameterType="com.dachen.health.pack.incomeNew.entity.po.RefundOrder" resultMap="wxMap">
  		select pr.ID,pr.money,pr.thrid_refund_id,pr.order_id,tr.Id as tId from p_refund_order pr
  		inner join t_refund tr on tr.refund_order_id = pr.ID
  		where tr.pay_type = 1 and pr.status=2
  </select>
</mapper>